import ArgumentParser
import Foundation

struct FileInfo: ParsableCommand {
    
    @Argument(help: "Path")
    var path: String

    mutating func run() throws {
        let url = URL(fileURLWithPath: path)
        try url.resourceValues(forKeys: Set(resourceKeys)).allValues
            .sorted { p1, p2 in
                p1.key.rawValue < p2.key.rawValue
            }
            .forEach { (key: URLResourceKey, value: Any) in
                print(key.rawValue + ":", value)
            }
    }
}

let resourceKeys: [URLResourceKey] = [
    .keysOfUnsetValuesKey,
    .nameKey,
    .localizedNameKey,
    .isRegularFileKey,
    .isDirectoryKey,
    .isSymbolicLinkKey,
    .isVolumeKey,
    .isPackageKey,
    .isApplicationKey,
    .applicationIsScriptableKey,
    .isSystemImmutableKey,
    .isUserImmutableKey,
    .isHiddenKey,
    .hasHiddenExtensionKey,
    .creationDateKey,
    .contentAccessDateKey,
    .contentModificationDateKey,
    .attributeModificationDateKey,
    .linkCountKey,
    .parentDirectoryURLKey,
    .volumeURLKey,
    .typeIdentifierKey,
    .contentTypeKey,
    .localizedTypeDescriptionKey,
    .labelNumberKey,
    .labelColorKey,
    .localizedLabelKey,
    .effectiveIconKey,
    .customIconKey,
    .fileResourceIdentifierKey,
    .volumeIdentifierKey,
    .preferredIOBlockSizeKey,
    .isReadableKey,
    .isWritableKey,
    .isExecutableKey,
    .fileSecurityKey,
    .isExcludedFromBackupKey,
    .tagNamesKey,
    .pathKey,
    .canonicalPathKey,
    .isMountTriggerKey,
    .generationIdentifierKey,
    .documentIdentifierKey,
    .addedToDirectoryDateKey,
    .quarantinePropertiesKey,
    .fileResourceTypeKey,
    .fileContentIdentifierKey,
    .mayShareFileContentKey,
    .mayHaveExtendedAttributesKey,
    .isPurgeableKey,
    .isSparseKey,
    .thumbnailDictionaryKey,
    .thumbnailKey,
    .fileSizeKey,
    .fileAllocatedSizeKey,
    .totalFileSizeKey,
    .totalFileAllocatedSizeKey,
    .isAliasFileKey,
    .fileProtectionKey,
    .volumeLocalizedFormatDescriptionKey,
    .volumeTotalCapacityKey,
    .volumeAvailableCapacityKey,
    .volumeResourceCountKey,
    .volumeSupportsPersistentIDsKey,
    .volumeSupportsSymbolicLinksKey,
    .volumeSupportsHardLinksKey,
    .volumeSupportsJournalingKey,
    .volumeIsJournalingKey,
    .volumeSupportsSparseFilesKey,
    .volumeSupportsZeroRunsKey,
    .volumeSupportsCaseSensitiveNamesKey,
    .volumeSupportsCasePreservedNamesKey,
    .volumeSupportsRootDirectoryDatesKey,
    .volumeSupportsVolumeSizesKey,
    .volumeSupportsRenamingKey,
    .volumeSupportsAdvisoryFileLockingKey,
    .volumeSupportsExtendedSecurityKey,
    .volumeIsBrowsableKey,
    .volumeMaximumFileSizeKey,
    .volumeIsEjectableKey,
    .volumeIsRemovableKey,
    .volumeIsInternalKey,
    .volumeIsAutomountedKey,
    .volumeIsLocalKey,
    .volumeIsReadOnlyKey,
    .volumeCreationDateKey,
    .volumeURLForRemountingKey,
    .volumeUUIDStringKey,
    .volumeNameKey,
    .volumeLocalizedNameKey,
    .volumeIsEncryptedKey,
    .volumeIsRootFileSystemKey,
    .volumeSupportsCompressionKey,
    .volumeSupportsFileCloningKey,
    .volumeSupportsSwapRenamingKey,
    .volumeSupportsExclusiveRenamingKey,
    .volumeSupportsImmutableFilesKey,
    .volumeSupportsAccessPermissionsKey,
    .volumeSupportsFileProtectionKey,
    .volumeAvailableCapacityForImportantUsageKey,
    .volumeAvailableCapacityForOpportunisticUsageKey,
    .isUbiquitousItemKey,
    .ubiquitousItemHasUnresolvedConflictsKey,
    .ubiquitousItemIsDownloadingKey,
    .ubiquitousItemIsUploadedKey,
    .ubiquitousItemIsUploadingKey,
    .ubiquitousItemDownloadingStatusKey,
    .ubiquitousItemDownloadingErrorKey,
    .ubiquitousItemUploadingErrorKey,
    .ubiquitousItemDownloadRequestedKey,
    .ubiquitousItemContainerDisplayNameKey,
    .ubiquitousItemIsExcludedFromSyncKey,
    .ubiquitousItemIsSharedKey,
    .ubiquitousSharedItemCurrentUserRoleKey,
    .ubiquitousSharedItemCurrentUserPermissionsKey,
    .ubiquitousSharedItemOwnerNameComponentsKey,
    .ubiquitousSharedItemMostRecentEditorNameComponentsKey,
]

FileInfo.main()
